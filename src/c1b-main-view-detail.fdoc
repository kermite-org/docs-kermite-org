#chapter メイン画面(機能詳細)

#----
#section レイヤの動作

#head2 キーアサインの探索処理の動作

#text
Kermiteでは、キーマッピングのレイヤを16個まで作成できます。
キーが押されたときに適用されるアサインの探索処理について説明します。

#image url=https://i.gyazo.com/580437481fe2689e5dffeb7e055754e7.png

#text
キーが押されたときに、全レイヤからアクティブなレイヤが抽出され、上のレイヤから順に探索が行われます。レイヤを順に調べ、レイヤ内で対象のキーに割り当てがあればそのアサインに対応する機能を実行して処理を終了します。キーに割り当てがないときには、下のレイヤに探索処理が引き継がれます。


#head2 デフォルトスキーム

#image url=https://i.gyazo.com/99d43beee0816eac097e60c260cb8c3f.png

#text
レイヤにはデフォルトスキームという属性があり、探索時にアサインがない場合のデフォルトの動作を規定しています。デフォルトスキームをtransparentにすると、下のレイヤに探索処理が引き継がれます。blockにすると、アサインがない場合探索がそこで終了します。


#head2 ブロックアサインと透過アサイン

#image url=https://i.gyazo.com/8a5c414647022b2d6792c06dd5ce1157.png

#text
レイヤのデフォルトスキームとは別に、レイヤ内のキーに対して、アサインがないときの処理をキーごとに個別に上書きして指定することができます。アサインパレットの左端にある、blockとtransがそれです。

#image url=https://i.gyazo.com/6c9d1004173ddab12b398ae22d80148c.png

#text
キーボード表示上では、ブロックアサインは□、透過アサインは↡の記号で表示されます。

#head2 デフォルトアサインの表示

#image url=https://i.gyazo.com/fb1844e0571b9143252e5407daf0d79c.png

#text
表示設定の'デフォルトアサインを表示'にチェックを入れると、レイヤのデフォルトスキーム属性に従って、アサインがないキーに対して灰色でデフォルトアサインが表示されます。




#section UIの各部名称

#image url=https://i.gyazo.com/8472a619919936f9084cc611b9eee0ba.png

#text
以下の解説では、画面上半分のキーボードの部分をキーボード表示、下半分のキーに割り当てる機能が並んでいるところをアサインパレット、右列のレイヤの一覧をレイヤリストと呼んでいます。


#section トップバー

#image url=https://i.gyazo.com/3d00c8a09f254a6f3015a58d266adbef.png

#table
プロファイルメニュー|プロファイルを管理するためのメニューが表示されます。
プロファイルセレクタ|編集対象のプロファイルを選択します。
プロファイル設定ボタン|プロファイル設定ダイアログを開きます。
アサインルーティング設定ボタン|アサインルーティング設定ダイアログを開きます。
保存ボタン|プロファイルを上書き保存します。
書き込みボタン|キーマッピングをデバイスに書き込みます。
ウィジェット表示ボタン|ウィジェット表示モードに切り替えます。ウィジェット表示モードでは、ブラウザのスクリーン全体にキーボードのUIが単体で表示されます。


#section キーボード表示

#text
画面の上半分にキーボードのUIが表示されます。レイヤ表示モードにより表示が異なります。

#head2 編集モード

#image url=https://i.gyazo.com/3afe42682cf2cfca838bf773c5f88858.png

#text
編集モードでは現在選択されているレイヤが表示されます。
クリックして編集対象のキーを選びます。選択されているキーが青色で表示されます。
押されているキーがオレンジ色でハイライト表示されます。

#head2 ライブモード

#image url=https://i.gyazo.com/1dd377a05dfa731671d231068f030c22.png

#text
ライブモードではデバイスのレイヤ状態を反映してキーマッピングが表示されます。
アサインが実際に入力されるものに対応した表示になります。

#image url=https://i.gyazo.com/ff8ec3143dd9e225196a7b1ec7504fcb.png

#text
また、画面左上にデバイスのレイヤ状態が表示されます。
アクティブなレイヤが水色で右にずれて表示されます。

#section アサインパレット

#image url=https://i.gyazo.com/75c50d0d2becfe56d82800c9be978417.png

#text
アサインパレットにはキーに割り当てることができる機能が並んでいます。
現在選択されているキーに割り当てられているものが水色で表示されます。

#head2 割り当てなし/ブロック/透過アサイン

#image url=https://i.gyazo.com/9bc5600ce2351e1f39b3a6d00c49baa2.png

#table
none|機能の割り当てを解除します。レイヤのデフォルトアサインの設定によって ブロックまたは透過アサインとして振る舞います。
block|アサインの探索時にこれにマッチすると、探索がそこで終了します。
trans|アサインの探索時にレイヤがスキップされ、下のレイヤに探索が引き継がれます。

#head2 文字入力やキーボードの標準的な機能のアサイン

#image url=https://i.gyazo.com/fb31067820c54b7d8b4b75e0729c1280.png

#text
単一の文字やキーボードの一般的なキーを割り当てます。

#head2 キーアタッチドモディファイヤ

#image url=https://i.gyazo.com/3152dc59ef5d9fdfe38c62ed88a403d2.png

#text
アサインに対して、モディファイヤキーを同時に発行します。
shiftとctrlなど、複数のモディファイヤを適用することもできます。


#head2 レイヤ関連アサイン

#head2 --レイヤ呼び出し

#image url=https://i.gyazo.com/bbc3a26db6d3a90b6545eb478982f16a.png

#text
レイヤ名に対応するアサインです。対象のレイヤを呼び出します。

#head2 --レイヤ動作モード

#image url=https://i.gyazo.com/cd5599611da52820166c5b9a01bdef76.png

#text
レイヤを呼び出す際の振る舞いを選択します。

#table
hold|キーを押している間だけ対象のレイヤが有効になります。
turnOn|対象のレイヤを有効化します。
turnOff|有効になっているレイヤを無効化します。
toggle|有効/無効をトグルで切り替えます。
oneShot|次の打鍵に対して、対象のレイヤが一時的に適用されます。

#head2 --ex-clear

#image url=https://i.gyazo.com/d71a7f5d6a3744e0fe51e58399e55c8f.png

#text
レイヤグループの機能を使っている場合に、グループに属しているレイヤを全て無効化します。セレクタで対象のレイヤグループを指定します。



#head2 特殊機能

#image url=https://i.gyazo.com/ba5e579c21706f50ce204ef03ef3b6ec.png

#text
Kermiteのファームウェアに固有の機能を割り当てます。


#table
led on^|LEDのon/offを切り替えます。
led b-|LEDの輝度を下げます。
led b+|LEDの輝度を上げます。
led c>|LEDの色を変更します。
led p>|LEDの点灯パターンを変更します。
sl-US|システムレイアウトをUSに切り替えます。
sl-JIS|システムレイアウトをJISに切り替えます。
sl-toggle|システムレイアウトをUS/JISでトグルします。
rc-Main|ルーティングチャネルをMainチャネルに切り替えます。
rc-Alter|ルーティングチャネルをAlterチャネルに切り替えます。
rc-toggle|ルーティングチャネルをMain/Alterでトグルします。

#head2 Dualアサインスロットの選択

#image url=https://i.gyazo.com/f64813d8f82e439a4f0f0a0f764eaba7.png

#text
dualモードでは、アサインパレットにprimary/secondary/tertiaryの3つのスロットが追加されます。1つのキーに対して、3つの入力を割り当てることができます。

#table
primary|キーを短く押したときに適用されるアサインです。
secondary|キーを一定時間押し続けると適用されるアサインです。
tertiary|キーを2回タップしたときに適用されるアサインです。


#section レイヤリスト

#head2 レイヤ一覧

#image url=https://i.gyazo.com/a5a091822eb30030fa50e9d60f21763a.png

#text
プロファイルに含まれるレイヤの一覧が表示されています。
現在選択されているレイヤが青色でハイライトされます。
レイヤは最大16個まで作成できます。

#head2 レイヤ操作ボタン

#image url=https://i.gyazo.com/8f95283c67aa1479ebe9fcd666b5408b.png

#table
新規|レイヤを追加します。
編集|選択されているレイヤの属性を編集します。
削除|選択されているレイヤを削除します。
上へ|レイヤの順序を一つ上に移動します。
下へ|レイヤの順序を一つ下に移動します。


#section レイヤ属性設定ダイアログ

#image url=https://i.gyazo.com/3b9cc62eed82495fbd9f4f81c9cba0fe.png

#text
レイヤ作成ボタンや編集ボタンを押すと、レイヤプロパティダイアログが表示されます。
レイヤが持っている属性をここで編集します。

#image url=https://i.gyazo.com/67bef16b23724614d47a258becbe6663.png

#table
レイヤ名|レイヤの名前を設定します。
デフォルトスキーム|キーにアサインを割り当てない場合の規定の動作を設定します。
添付モディファイヤ|レイヤがアクティブなときにモディファイヤを同時に有効化できます。
レイヤ排他グループ|複数のレイヤを同じ排他グループに所属させると、それらのうちの一つが有効化された場合に、それ以外のレイヤが無効になります。
初期状態でレイヤを有効化|ファームウェアの起動時にレイヤが有効になります。


#section プロファイル属性

#image url=https://i.gyazo.com/35b9337e75b0201ebdfeb3b5be8b49cb.png

#text
プロファイルの対象キーボードと、ロジックモデルの設定が表示されます。

#section プロファイル設定

#image url=https://i.gyazo.com/f9274d61a79e5cf9713d07549abd9fae.png

#text
画面上部のギアのアイコンをクリックすると、プロファイル設定のダイアログが開きます。
プロファイルが保持している、キー入力ロジックに関連する設定値をここで編集します。

#image url=https://i.gyazo.com/429fe1e961c7c728109e70581bffec15.png

#head2 ロジックモデル

#text
キー入力をどのように処理するかの振る舞いを規定したものをロジックモデルと呼んでいます。また、それに対応するキーマッピングのデータ形式があります。現在、singleモードとdualモードという2つのロジックモデルがあります。singleモードではキーに対して単一の機能が割り当てられます。dualモードでは1つのキーに対して、単押し/長押し/ダブルタップの3つのトリガに応答する機能をそれぞれ割り当てる事ができます。

#head2 タップ判定時間

#text
dualモードの場合に、キーを押してすぐ離すとタップ、キーを押しっぱなしにすると長押しと判定されます。タップ判定時間は、キーを押して離したときにタップとして判定される最大の時間をms単位で設定します。

#head2 割り込みホールド機能

#text
dualモードで、タップ/ホールドの2つのトリガに機能がアサインされているキーを押しながら他のキーを押した場合に、タップ判定時間によらず最初に押したキーがホールドと判定されるようになる仕組みです。

#head2 プライマリデフォルトトリガ

#text
dualモードではタップとホールドのトリガに対して機能を割り当てる事ができますが、どちらか片方にのみ機能を割り当てたときの挙動をカスタマイズしたい場合があります。プライマリアサインのみが存在する場合に、プライマリデフォルトトリガがdownの場合、そのキーは通常のアサインと同様にキーを押したときにon,キーを離したときにoffになります。プライマリデフォルトトリガがtapの場合、そのキーがタップされた場合に割り当てられたアサインが発行されます。

#head2 セカンダリデフォルトトリガ

#text
プライマリアサインの指定がなくセカンダリアサインのみ指定がある場合のトリガを指定します。downの場合、通常のアサインと同様にキーを押したときにon,キーを離したときにoffになります。holdの場合、長押しと判定された場合にアサインが発行されます。

#head2 Shiftキャンセル

#text
記号レイヤなどで、キーに対して本来Shiftキーを押さずに入力する記号などを割り当てた際に、Shiftキーが押されている場合にそれを一時的に無効にして記号などを出力する機能です。

#table
none|Shiftキャンセル機能を使用しません。
shiftLayer|レイヤのアタッチドモディファイヤにShiftが含まれるレイヤ内でのみShiftキャンセル機能が有効になります。
all|全レイヤでShiftキャンセル機能が有効になります。


#section アサインルーティング機能

#text
複数の環境でキーボード使用する際に、特定のキーコードの出力を環境によって切り替えたいことがあります。Kermiteにはアサインルーティングという機能が搭載されており、予めキーコードの変換テーブルを登録しておき、ルーティングチャネルを切り替えることで、キーコードの出力を差し替えることができます。ルーティングチャネルにはMainチャネルとAlterチャネルの2種類があります。

#image url=https://i.gyazo.com/e4676de07fc5de20ddeb237a37a257ab.png

#text
画面上部のアイコンをクリックして、アサインルーティングの設定ダイアログを表示します。

#image url=https://i.gyazo.com/2a78e99097afb8c63832f220d6c92d3f.png

#table
channel|変換対象のチャネルです。
src key|変換対象のアサインのキーです。
src mods|変換対象のアサインに添付されているモディファイヤです。
dst key|変換先のキーです。
dst mods|変換先のモディファイヤです。

#text
キーが押下されたときに、ファームウェアのキー入力ロジックにより出力されるキーコードが決定されますが、その後にアサインルーティングの処理が挟まれており、キーコードの変換が行われます。
チャネルとソースキー、ソースモディファイヤがテーブルのエントリに一致した場合に、そのエントリの出力先に指定されているキーコードとモディファイヤに変換されます。

#text
変換対象のモディファイヤはアサインに添付されているモディファイアが対象となっており、独立したキーの組み合わせに対して変換が適用されるわけではありません。

#head2 変換動作の例

#image url=https://i.gyazo.com/229da6a1ee70566067fc1275ae9699ce.png

#text
(0)Mainチャネルでモディファイヤの付随しないAキーのアサインを、Bキーに変換します。
(1)Alterチャネルでshift+Cのアサインを、モディファイヤの付随しないDに変換します。
(2)MainチャネルでのEのアサインをFに変化します。添付モディファイヤは維持されます。
(3)チャネルによらずshift+ctrl+Gのアサインをshift+alt+Hに変換します。

#head2 ルーティングチャネルの切り替え

#image url=https://i.gyazo.com/820d872e7b575c5e266ea43e4c40e0e5.png

#text
デバイス設定のルーティングチャネルのところで値(Main/Alter)を切り替えます。

#image url=https://i.gyazo.com/1da81d7cfbe22764aa5492cdabe66c19.png

#text
また、特殊機能アサインにルーティングチャネルを変更するアサインがあり、これらを
キーに割り当てるとキー入力でチャネルを切り替えられるようになります。

#head2 実際の使用例

#image url=https://i.gyazo.com/271c6d5a417bc29bb7585d5d2259d0ca.png

#text
¥のアサインをalt+Yで出力する例です。
MacOS,USレイアウトで¥の記号を出力したい場合にこの変換を使うと便利です

#image url=https://i.gyazo.com/f0d5e4552ea16606ed0a2c4037456544.png

#text
AlterチャネルでOS(MacOSの場合Cmdキー)とCtrlを入れ替える例です。
Windowsで使うときはMainチャネル、MacOSで使うときにはAlterチャネル(あるいはその逆)に切り替えて使用します。

#image url=https://i.gyazo.com/4c4205fabc8335fffa23d03f53595a6d.png

#text
Alterチャネルで英数キーとかなキーを無変換、変換のキーに置き換える例です。
WindowsやMacOSでは英数キーとかなキーでIMEの切り替えができますが、Chromebookでは無変換と変換キーを使う必要がありその変換を行っています。


#section デバイス設定


#image url=https://i.gyazo.com/abcb66c59961d276cc2b9bde557a9ea2.png

#text
メイン画面の右下のパネルに、キー入力のロジックに関する設定が表示されています。これらの設定はデバイス側で保持されており、UIから値を変更すると即時反映されます。値はMCUのデータ保存領域に保存されているため、デバイスの電源を切ったりPCを再起動した際にも設定が維持されます。

#head2 シミュレータモード
#image url=https://i.imgur.com/haNfklc.png
#text
キー入力のロジックをアプリ側に実装されているシミュレータによって行う動作モードです。ファームウェア内での処理と同等の処理がKermiteのアプリ側で行われ、キー入力のためのHIDレポートがRawHIDインターフェイス経由でMCUに送信されます。MCUではアプリから受け取ったレポートをPC(OS)にHID Keyboardのインターフェイスで送信します。
シミュレータモード時には、キーマッピングの編集内容が即時ロジックに反映されます。試行錯誤しながらキーマッピングを編集する際に、毎回キーマッピングをMCUに書き込む手間を削減することができます。

#head2 ミュートモード
#image url=https://i.imgur.com/rbIbEU2.png
#text
キーコードの出力を一時的に無効にします。
この設定は永続化されません。デバイスをアプリからデタッチしたり、アプリを終了したり、デバイスの電源を切った際などにはミュートモードはOFFに戻ります。
キーインデクスとキー配置の対応づけを行う場合などに、文字が入力されてしまい作業がやりにくい場合などに利用します。

#head2 システムレイアウト
#image url=https://i.imgur.com/RxJLEsY.png
#text
OSがキーボードを認識する際のキーボードレイアウトです。US(ANSI)とJISをいつでも切り替えることができます。Kermiteのファームウェアのキー入力処理実装はJISとUSに対応するキーコードのテーブルを持っており、この値でどちらのテーブルを参照するかを切り替えています。

#head2 ルーティングチャネル
#image url=https://i.imgur.com/myOtXgr.png
#text
アサインルーティング機能の現在のチャネルを設定します。MainチャネルとAlterチャネルがあります。ルーティング機能ではチャネルごとに適用されるルーティングエントリを設定できます。たとえばMainチャネルにWindows向けのルーティングを,AlterチャネルにMacOS向けのルーティングを登録しておき、適用されるキーマッピングを動的に切り替えて使用することができます。詳細はアサインルーティング機能の解説を参照してくだだい。


